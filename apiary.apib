FORMAT: 1A
HOST: http://dsc.inf.furb.br/

# DCE 

API para realização do trabalho 1 de programação web II

## Login [/login]

### Fazer Login [POST]
+ Request (application/json)
    + Attributes (Login)

+ Response 200 (application/json)

        {
            "token" : "hash"   
        }
        
+ Response 401 (application/json)

        {
            "message" : "Email ou usuario invalido"   
        }
        
## Noticias [/noticias]

### Lista Noticias [GET]
+ Response 200 (application/json)

        [
            {
                "id": "1",
                "publish_date": "2014-01-01T23:28:56.782Z",
                "title": "Câmara Municipal de Blumenau homenageia professor Mauro Marcelo Mattos, do DSC.",
                "subtitle": "A Câmara de Vereadores homenageou seis professores que atuam em escolas da rede pública",
                "body_news": "Os detalhes das apresentações................"
            },
            {
                "id": "2",
                "publish_date": "2015-01-01T23:28:56.782Z",
                "title": "1ª Feira de Inovação e Empreendedorismo de Blumenau",
                "subtitle": "Feira de inovação chega em bluemnau.",
                "body_news": "Os detalhes das apresentações................"
            }
        ]

### Informacoes de uma noticia [GET /noticias/{id}]
+ Response 200 (application/json)

        {
           "id": "2",
           "publish_date": "2015-01-01T23:28:56.782Z",
           "title": "1ª Feira de Inovação e Empreendedorismo de Blumenau",
           "subtitle": "Feira de inovação chega em bluemnau."
           "body_news": "Os detalhes das apresentações................"
        }
     
+ Response 404 (application/json)

        {
            "message": "Noticia não encontrada"
        }
        
### Salvar nova noticia [POST /noticias]
+ Request (application/json)
    + Attributes (Noticia)
    
+ Response 200 (application/json)

        {
            "message": "Noticia salva com sucesso"
        }
        
### Editar uma noticia [PUT /noticias/{id}]

+ Request (application/json)
    + Attributes (Noticia)
    
+ Request (application/json)

        {
            "title": "new title"
        }

+ Request (application/json)

        {
            "subtitle": "new subtitle"
        }
    
+ Request (application/json)

        {
            "body_news": "new body_news"
        }

+ Response 200 (application/json)

        {
            "message": "Noticia salva com sucesso"
        }

+ Response 404 (application/json)

        {
            "message": "Noticia não encontrada"
        }

### Deletar uma noticia [DELETE /noticias/{id}]
+ Response 204 (application/json)
        
+ Response 404 (application/json)

        {
            "message": "Noticia não encontrada"
        }

## Professor [/professor]

### Listar Professores [GET]
+ Response 200 (application/json)

+ Response 404 (application/json)

        {
            "message": "Nenhum professor encontrado"
        }
        
### Informaçoes sobre um Professores [GET /professor/<id>]
+ Response 200 (application/json)
        
+ Response 404 (application/json)

        {
            "message": "Nenhum professor encontrado"
        }


### Adicionar professor [POST]
+ Request (application/json)
    + Attributes (Professor)
    
+ Response 201 (application/json)

+ Response 401 (application/json)

        {
            "message": "Usuario não autorizado"
        }
    
### Deletar professor [DELETE /professor/{id}]
+ Response 204 (application/json)

+ Response 404 (application/json)

        {
            "message": "Professor não encontrado"
        }
    
+ Response 401 (application/json)

        {
            "message": "Usuario não autorizado"
        }
        
### Alterar professor [PUT /professor/{id}]

+ Request (application/json)

        {
            "formacao": "nova formacao",
            "nome": "novo nome",
            "area": "nova area",
            "descricao": "nova descricao"
        }

+ Request (application/json)

        {
            "formacao": "nova formacao"
        }
        
+ Request (application/json)

        {
            "nome": "novo nome"
        }
        
+ Request (application/json)

        {
            "area": "nova area"
        }
        
+ Request (application/json)

        {
            "descricao": "nova descricao"
        }  
        
+ Response 201 (application/json)

+ Response 404 (application/json)
    
        {
            "message": "Professor não encontrado"
        }
        
+ Response 401 (application/json)

        {
            "message": "Usuario não autorizado"
        }

## Curso [/curso]

### Lista Curso [GET]
+ Response 200 (application/json)

        [
            {
                "id" : "1",
                "nome" : "Ciência da Computação - Matutino",
                "horario" : "Matutino"
                
            },
            {
                "id" : "2",
                "nome" : "Ciência da Computação - Noturno",
                "horario" : "Noturno"
            },
            {
                "id" : "3",
                "nome" : "Sistemas de Informação - Noturno",
                "horario" : "Noturno"
            }
        ]
        
+ Response 404

        {
            "menssage" : "Cursos não encontrados!!"
        }
        
+ Response 408

        {
            "menssage" : "Tempo limite da operação excedido!!"
        }

### Lista Curso [GET/cursos/{id}]
+ Response 200 (application/json)

        [
            {
                "id" : "1",
                "nome" : "Ciência da Computação - Matutino",
                "horario" : "Matutino"
            }
        ]

+ Response 404

        {
            "menssage" : "Curso não encontrado!!"
        }
        
+ Response 408

        {
            "menssage" : "Tempo limite da operação excedido!!"
        }

### Criar curso [POST]

+ Request (application/json)
    + Attributes (Curso)

+ Response 201 (application/json)

+ Response 401 (application/json)


        {
            "menssage" : "Não foi possível criar um curso"
        }

### Deletar um curso [DELETE /curso/{id}]

+ Parameters
    + id (string)

+ Response 204 (application/json)
+ Response 401 (application/json)

### Alterar curso [PUT /curso/{id}]
+ Request (application/json)
    + Attributes (Curso)
        
+ Response 201 (application/json)
+ Response 401 (application/json)


## Monitores [/monitores]

### Alterar monitor [PUT /monitortes/<id>]
+ Request (application/json)

        {
            "nome": "Alex Seródio Gonçalves",
            "area": "Tecnologias em Computação Gráfica",
            "email" : {
                "principal": "alexserodio@furb.br",
                "opcional": "alequis01@gmail.com"
            }
        }
        
+ Response 201 (application/json)
    
+ Response 401 (application/json)

        {
            "message": "Usuario não autorizado"
        }


# Data Structures

## Curso(object)
+ id (number)
+ nome (string)
+ horario(object)

## Pessoa(object)
+ id (string)
+ nome (string)

## Professor(Pessoa)
+ formacao (string)
+ area (string)
+ descricao (string)

## Login (object)
+ email (string)
+ senha (string)

## Noticia
+ title (string)
+ subtitle (string)
+ body_news (string)